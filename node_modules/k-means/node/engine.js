var Engine = {};

Engine.clusterDataSet = function(matrix, options, cb){
  if (typeof options === 'function') {
    cb = options;
    options = undefined;
  }

  cb = cb || function (results){
    console.log(results);
  };

  options             = options            || {};
  options.clusters    = options.clusters   || 2;
  options.iterations  = options.iterations || 10;
  options.assigned    = options.assigned ? 1 : 0;
  
  // perform some tests:
  if (!Array.isArray(matrix) || !Array.isArray(matrix[0])) {
    throw 'Need to input a 2-dimensional array for clustering';
  }

  matrix = JSON.stringify(matrix);
  options = JSON.stringify(options);

  var pythons = [];
  var outputs = [];
  var pythonNum = 0;
  // immediately invoked function in case user invokes runPython multiple times,
  // starting multiple child processes, causing race condition, 
  // causing stdouts to potentially overlap (otherwise).
  (function (num){
    pythons[num] = require('child_process').spawn(
      'python',
      [__dirname + '/../lib/exec.py', matrix, options]);
    outputs[num] = '';
    pythons[num].stdout.on('data', function (data){
      outputs[num] += data;
    });
    pythons[num].stdout.on('close', function (){
      try {
        cb(JSON.parse(outputs[num]));
      } catch (e) {
        cb(outputs[num]);
      }
    });
  })(pythonNum++)};

module.exports = Engine;
